@use '../../../variables' as v;
@use '../../../mixins/global-mixin' as *;

.list-candidates {
  @include useFlexbox(column, $al: flex-start);
  @include useSquareSize(100%);
  list-style-type: none;
  gap: 1rem;
}

%common-props {
  border-radius: 0.9375rem;
}

.candidate-item {
  display: block;
  width: 100%;
  font-size: 0.8rem;
  cursor: pointer;
  background-color: transparent;
  @extend %common-props;
}

.candidate-row {
  @extend %common-props;
  display: flex;
  position: relative;
  gap: 0.75rem;
  padding: 0.5rem;
  background-color: lighten(v.$primary_color, 65%);
  @include useFlexbox(column, $jt: flex-start, $al: flex-start);
  @include useSquareSize(100%);

  &__overlay {
    @extend %common-props;
    @include usePosition(absolute, 0, 0);
    @include useSquareSize(100%);
    border: 1px solid lighten(v.$primary_color, 55%);
    box-shadow: 0 0 1.5px 0.5px darken(rgba(v.$primary_color, 30%), 10%);
    background-color: rgba(v.$primary_color, 0.5%);
    z-index: v.$zindex_base_level;

    @include useInfoIndicator();

    &:is(:hover, :focus) {
      @include useHovered-info-indicator();
      box-shadow: 0 0 2.5px 1.5px darken(rgba(v.$primary_color, 60%), 10%);
      background-color: rgba(v.$primary_color, 5%);
    }
  }
}

.candidate-picture {
  $size: 6.25rem;
  @extend %common-props;
  display: flex;
  align-self: flex-start;
  max-width: $size;
  flex-basis: $size;
  clip-path: circle(50% at 50%);
  &__img {
    @include useSquareSize(100%);
    object-fit: cover;
  }
}

@media (min-width: 600px) {
  .candidate-row {
    flex-direction: row;
    align-items: center;
  }
}
